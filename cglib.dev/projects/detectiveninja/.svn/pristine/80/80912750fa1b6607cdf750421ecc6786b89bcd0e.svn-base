#ifndef NINJA_H
#define NINJA_H

#include <string>
#include "cg/cg.h"
#include "WorldObject.h"
#include "Physics.h"
#include "CollisionManager.h"
#include "TextureManager.h"

namespace proj {

	class Ninja : public WorldObject
	{
	private:
		Physics _physics;

		bool _isRunning;
		bool _jumpKeyReleased;

		float _hatCenterWidth, _hatCenterLength, _hatCenterHeight;
		float _hatMiddleWidth, _hatMiddleLength, _hatMiddleHeight;
		float _headWidth, _headLength, _headHeight;
		float _bodyWidth, _bodyLength, _bodyHeight;
		float _armWidth, _armLength, _armHeight;
		float _legWidth, _legLength, _legHeight;

		float _bodyAngle, _armAngle[2], _legAngle[2];
		cg::Vector3f _armRotationVector[2], _legRotationVector[2];
		bool _legDirection[2];	// true if moving forward; false if moving backwards

		void updateAngles();

	protected:
		void registerToCollisionManager();
		void createBoundingSpheres();
		void updateBoundingSpheres();

	public:
		Ninja(std::string id, cg::Vector3d position);
		~Ninja();

		void init();
		void update(unsigned long elapsed_millis);
		void draw();

		cg::Vector3d getPosition();
		void setHeight(int height);
	};
}

#endif