#include "Light.h"

namespace proj {

	Light::Light(std::string id) : cg::Entity(id) {}
	Light::~Light() {}

	void Light::toggleLight() {

		_lightOn = !_lightOn;

		if (_lightOn) {
			glEnable(_lightConstant);
			printf("LIGHT::%s is on!\n", getId().c_str());
		}
		else {
			glDisable(_lightConstant);
			printf("LIGHT::%s is off!\n", getId().c_str());
		}
	}

	void Light::update(unsigned long elapsed_millis) {
		double elapsed_seconds = elapsed_millis / (double)1000;
	}

	void Light::draw() {
	
		glPushMatrix();
			//glTranslated(_position[0],_position[1],_position[2]);
			glCallList(_lightDL);
		glPopMatrix();

		if (isDebug()) {

			glDisable(GL_LIGHTING);

			glPushMatrix();
				glTranslated(_position[0],_position[1],_position[2]);
				glColor3f(0.9f,0.9f,0.9f);
				glutWireCone(2.0f,2.0f,10,10);
			glPopMatrix();

			glEnable(GL_LIGHTING);
		}
	}
}