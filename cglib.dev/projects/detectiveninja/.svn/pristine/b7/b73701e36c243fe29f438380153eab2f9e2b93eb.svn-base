#include "MenuManager.h"

namespace proj {

	MenuManager::MenuManager() : Entity("MenuManager") {
		_menus = new std::list<Menu*>();
	}
	MenuManager::~MenuManager() {}
	
	void MenuManager::init() {
		Menu* main = new MainMenu();
		add(main);
		_currentMenu = main;
		_currentMenu->activate();
	}

	void MenuManager::add(Menu* m) {
		_menus->push_back(m);
		cg::Registry::instance()->add(m);
		cg::View *view = (cg::View*) cg::Registry::instance()->get("view1");
		view->linkEntityAtEnd(m->getTitle());
	}

	void MenuManager::clear() {
		_menus->clear();
	}

	
	Menu* MenuManager::get(std::string name) {
		Menu* menu = NULL;
		std::list<Menu*>::iterator it;

		for(it = _menus->begin(); it != _menus->end(); it++) {
			if(!(*it)->getId().compare(name))
				menu = *it;
		}
		return menu;
	}

	void MenuManager::goToMenu(Menu* m) {
		_currentMenu->deactivate();
		_currentMenu = m;
		_currentMenu->activate();
	}
	void MenuManager::goToMenuByName(std::string menuName) {
		goToMenu(get(menuName));
	}

}