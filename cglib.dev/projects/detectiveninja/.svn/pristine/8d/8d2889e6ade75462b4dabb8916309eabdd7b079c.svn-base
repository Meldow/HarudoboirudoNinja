#ifndef PLAYER_H
#define PLAYER_H

#include <string>
#include "cg/cg.h"
#include "Physics.h"
#include "ITargetable.h"
#include "Debug.h"

namespace proj {

	class Player : public cg::Entity,
		public cg::IUpdateListener,
		public cg::IDrawListener,
		public ITargetable,
		public Debug
	{
	private:
		Physics _physics;
		bool _isRunning;
		bool _jumpKeyReleased;

		float _hatCenterWidth, _hatCenterLength, _hatCenterHeight;
		float _hatMiddleWidth, _hatMiddleLength, _hatMiddleHeight;
		float _headWidth, _headLength, _headHeight;
		float _faceWidth, _faceHeight;
		float _eyeWidth, _eyeHeight;
		float _bodyWidth, _bodyLength, _bodyHeight;
		float _armWidth, _armLength, _armHeight;
		float _legWidth, _legLength, _legHeight;

		float _bodyAngle, _armAngle[2], _legAngle[2];
		cg::Vector3f _armRotationVector[2], _legRotationVector[2];
		bool _legDirection[2];	// true if moving forward; false if moving backwards

		void updateAngles();

	public:
		Player(std::string id);
		~Player();

		void init();
		void update(unsigned long elapsed_millis);
		void draw();

		cg::Vector3d getPosition();
	};
}

#endif