#ifndef PLAYER_H
#define PLAYER_H

#include <string>
#include "cg/cg.h"

namespace proj {

	class Player : public cg::Entity,
		public cg::IDrawListener,
		public cg::IUpdateListener
	{
	private:
		cg::Vector2d _position, _direction;
		double _velocity, _acceleration, _stopped;
		double _angle, _angularVelocity;
		bool _isMoving;
		double MOVE_SPEED;

		float _hatCenterWidth, _hatCenterLength, _hatCenterHeight;
		float _hatMiddleWidth, _hatMiddleLength, _hatMiddleHeight;
		float _headWidth, _headLength, _headHeight;
		float _faceWidth, _faceHeight;
		float _eyeWidth, _eyeHeight;
		float _bodyWidth, _bodyLength, _bodyHeight;
		float _armWidth, _armLength, _armHeight;
		float _legWidth, _legLength, _legHeight;

		float _bodyAngle, _armAngle, _legAngle[2];
		bool _legDirection[2];	// true if moving forward; false if moving backwards

	public:
		Player(std::string id);
		~Player();
		
		void init();
		void update(unsigned long elapsed_millis);
		void draw();
		cg::Vector2d getPosition();
		void updatePosition();
		void updateAngles();
		void drawAxes();
	};
}

#endif